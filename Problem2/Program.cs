using System;

namespace Problem2
{
    public static class Program
    {
        // https://projecteuler.net/problem=2
        // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        private static void Main()
        {
            // A naive approach would iterate over all the fibonacci numbers smaller than the given value, check if it is even, and add it to the running sum.
            const int upperBound = 4000000;

            var a = 1;
            var b = 1;
            var sum = 0;

            while (a <= upperBound)
            {
                if (a % 2 == 0) sum += a;

                var c = a + b;
                a = b;
                b = c;
            }

            Console.WriteLine($"Answer: {sum}");

            // After 2, every third fibonacci number is even. The formula for this number is E(n) = 4 * E(n-1) + E(n-2)
            sum = 2;
            var secondLastEven = 0;
            var lastEven = 2;

            while (true)
            {
                var currentEven = 4 * lastEven + secondLastEven;
                if (currentEven <= upperBound)
                {
                    sum += currentEven;
                    secondLastEven = lastEven;
                    lastEven = currentEven;
                }
                else
                {
                    break;
                }
            }

            Console.WriteLine($"Answer: {sum}");

            Console.ReadKey();
        }
    }
}